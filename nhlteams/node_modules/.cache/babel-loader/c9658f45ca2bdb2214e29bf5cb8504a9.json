{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/odafeidogho/Documents/GitHub/nhlteamsSPA/nhlteams/src/landing/Team.js\";\nimport React, { Component } from \"react\";\nimport { Table, Modal, Button } from \"antd\";\nimport { Flag } from \"country-flags-react\";\nimport axios from \"axios\";\nimport { getCode, getName } from \"country-list\";\nexport default class Team extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filteredInfo: null,\n      sortedInfo: null,\n      playerInfo: {},\n      visible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = e => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.playerModal = playerInfo => {\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        title: `Nationality of ${playerInfo.name}`,\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: this.handleOk,\n          children: \"OK\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"modal-spam\",\n            children: playerInfo && playerInfo.nationality && getName(playerInfo.nationality.substring(0, 2))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Flag, {\n            countryCode: playerInfo && playerInfo.nationality && playerInfo.nationality.substring(0, 2).toUpperCase(),\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.handleChange = (pagination, filters, sorter) => {\n      this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    this.clearFilters = () => {\n      this.setState({\n        filteredInfo: null\n      });\n    };\n\n    this.clearAll = () => {\n      this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    };\n\n    this.setAgeSort = () => {\n      this.setState({\n        sortedInfo: {\n          order: \"descend\",\n          columnKey: \"age\"\n        }\n      });\n    };\n\n    this.reformatData = arr => {\n      let players = [];\n\n      if (arr.length > 0) {\n        arr.forEach((item, index) => {\n          const data = {\n            key: index,\n            jerseyNumber: item.jerseyNumber,\n            fullName: item.person.fullName,\n            id: item.person.id,\n            position: item.position.name\n          };\n          players.push(data);\n        });\n      }\n\n      return players;\n    };\n\n    this.getPlayer = player => {\n      axios.get(`https://statsapi.web.nhl.com/api/v1/people/${player.id}`).then(res => {\n        const player = res.data.people[0];\n        const playerInfo = {\n          name: player.fullName,\n          nationality: player.nationality\n        };\n        this.setState({\n          playerInfo\n        }, () => {\n          this.showModal();\n        });\n      });\n    };\n\n    this.getPostions = players => {\n      let positions = [];\n      let thePositions = [];\n\n      if (players.length > 0) {\n        players.forEach(player => {\n          positions.push(player.position.name);\n        });\n      }\n\n      const uniquePositions = Array.from(new Set(positions));\n      uniquePositions.forEach(position => {\n        const data = {\n          text: position,\n          value: position\n        };\n        thePositions.push(data);\n      });\n      return thePositions;\n    };\n  }\n\n  render() {\n    let {\n      sortedInfo,\n      filteredInfo,\n      playerInfo\n    } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const {\n      teamPlayers\n    } = this.props;\n    const positions = this.getPostions(teamPlayers);\n    const columns = [{\n      title: \"Number\",\n      dataIndex: \"jerseyNumber\",\n      key: \"jerseyNumber\",\n      sorter: (a, b) => a.jerseyNumber - b.jerseyNumber,\n      sortOrder: sortedInfo.columnKey === \"jerseyNumber\" && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: \"Name\",\n      dataIndex: \"fullName\",\n      key: \"fullName\",\n      sorter: (a, b) => a.fullName.localeCompare(b.fullName),\n      sortOrder: sortedInfo.columnKey === \"fullName\" && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: \"Position\",\n      dataIndex: \"position\",\n      key: \"position\",\n      filters: positions,\n      filteredValue: filteredInfo.position || null,\n      onFilter: (value, record) => record.position.includes(value)\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      \"data-test\": \"component-test\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"This SPA was built using the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/dword4/nhlapi\",\n            children: \"NHLAPI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), \" and its available on Github\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), teamPlayers.length <= 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a team from the menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: this.reformatData(teamPlayers),\n        onChange: this.handleChange,\n        onRow: r => ({\n          onClick: () => this.getPlayer(r)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), this.playerModal(playerInfo)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/odafeidogho/Documents/GitHub/nhlteamsSPA/nhlteams/src/landing/Team.js"],"names":["React","Component","Table","Modal","Button","Flag","axios","getCode","getName","Team","state","filteredInfo","sortedInfo","playerInfo","visible","showModal","setState","handleOk","e","handleCancel","playerModal","name","nationality","substring","toUpperCase","handleChange","pagination","filters","sorter","clearFilters","clearAll","setAgeSort","order","columnKey","reformatData","arr","players","length","forEach","item","index","data","key","jerseyNumber","fullName","person","id","position","push","getPlayer","player","get","then","res","people","getPostions","positions","thePositions","uniquePositions","Array","from","Set","text","value","render","teamPlayers","props","columns","title","dataIndex","a","b","sortOrder","ellipsis","localeCompare","filteredValue","onFilter","record","includes","r","onClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Modal, Button } from \"antd\";\nimport { Flag } from \"country-flags-react\";\nimport axios from \"axios\";\nimport { getCode, getName } from \"country-list\";\n\nexport default class Team extends Component {\n  state = {\n    filteredInfo: null,\n    sortedInfo: null,\n    playerInfo: {},\n    visible: false,\n  };\n\n  //   modal\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  playerModal = (playerInfo) => {\n    return (\n      <Modal\n        title={`Nationality of ${playerInfo.name}`}\n        visible={this.state.visible}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n        footer={[\n          <Button type=\"primary\" key=\"back\" onClick={this.handleOk}>\n            OK\n          </Button>,\n        ]}\n      >\n        <div className=\"text-center\">\n          <span className=\"modal-spam\">\n            {playerInfo &&\n              playerInfo.nationality &&\n              getName(playerInfo.nationality.substring(0, 2))}\n          </span>\n          <Flag\n            countryCode={\n              playerInfo &&\n              playerInfo.nationality &&\n              playerInfo.nationality.substring(0, 2).toUpperCase()\n            }\n            size={25}\n          />\n        </div>\n      </Modal>\n    );\n  };\n  handleChange = (pagination, filters, sorter) => {\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n\n  clearFilters = () => {\n    this.setState({ filteredInfo: null });\n  };\n\n  clearAll = () => {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  };\n\n  setAgeSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: \"descend\",\n        columnKey: \"age\",\n      },\n    });\n  };\n\n  reformatData = (arr) => {\n    let players = [];\n    if (arr.length > 0) {\n      arr.forEach((item, index) => {\n        const data = {\n          key: index,\n          jerseyNumber: item.jerseyNumber,\n          fullName: item.person.fullName,\n          id: item.person.id,\n          position: item.position.name,\n        };\n        players.push(data);\n      });\n    }\n    return players;\n  };\n\n  getPlayer = (player) => {\n    axios\n      .get(`https://statsapi.web.nhl.com/api/v1/people/${player.id}`)\n      .then((res) => {\n        const player = res.data.people[0];\n        const playerInfo = {\n          name: player.fullName,\n          nationality: player.nationality,\n        };\n        this.setState({ playerInfo }, () => {\n          this.showModal();\n        });\n      });\n  };\n\n  getPostions = (players) => {\n    let positions = [];\n    let thePositions = [];\n    if (players.length > 0) {\n      players.forEach((player) => {\n        positions.push(player.position.name);\n      });\n    }\n    const uniquePositions = Array.from(new Set(positions));\n    uniquePositions.forEach((position) => {\n      const data = {\n        text: position,\n        value: position,\n      };\n      thePositions.push(data);\n    });\n    return thePositions;\n  };\n\n  render() {\n    let { sortedInfo, filteredInfo, playerInfo } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const { teamPlayers } = this.props;\n    const positions = this.getPostions(teamPlayers);\n    const columns = [\n      {\n        title: \"Number\",\n        dataIndex: \"jerseyNumber\",\n        key: \"jerseyNumber\",\n        sorter: (a, b) => a.jerseyNumber - b.jerseyNumber,\n        sortOrder: sortedInfo.columnKey === \"jerseyNumber\" && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: \"Name\",\n        dataIndex: \"fullName\",\n        key: \"fullName\",\n        sorter: (a, b) => a.fullName.localeCompare(b.fullName),\n        sortOrder: sortedInfo.columnKey === \"fullName\" && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: \"Position\",\n        dataIndex: \"position\",\n        key: \"position\",\n        filters: positions,\n        filteredValue: filteredInfo.position || null,\n        onFilter: (value, record) => record.position.includes(value),\n      },\n    ];\n    return (\n      <div className=\"container\" data-test=\"component-test\">\n        <div className=\"text-center\">\n          <h1>\n            This SPA was built using the{\" \"}\n            <a href=\"https://github.com/dword4/nhlapi\">NHLAPI</a> and its\n            available on Github\n          </h1>\n          {teamPlayers.length <= 0 && <h2>Select a team from the menu</h2>}\n        </div>\n        <Table\n          columns={columns}\n          dataSource={this.reformatData(teamPlayers)}\n          onChange={this.handleChange}\n          onRow={(r) => ({\n            onClick: () => this.getPlayer(r),\n          })}\n        />\n        {this.playerModal(playerInfo)}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}